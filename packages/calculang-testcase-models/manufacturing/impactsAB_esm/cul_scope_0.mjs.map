{"version":3,"names":["memoize","A_revenue_","A_revenue$","B_revenue_","B_revenue$","revenue_impact_","revenue_impact$","A_revenue$m","JSON","stringify","A_revenue","a","B_revenue$m","B_revenue","step_in","units_in","price_in","price_multiplier_in","revenue_impact$m","revenue_impact"],"sources":["impactsAB.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    // import/export non-to memo?\n\n    import { A_revenue_ as A_revenue$, B_revenue_ as B_revenue$, revenue_impact_ as revenue_impact$ } from './impactsAB.cul.js?+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n    \n    \n    \n\n////////// start A_revenue memo-loader code //////////\n//const A_revenue$m = memoize(999999, isEqual)(A_revenue$);\nexport const A_revenue$m = memoize(A_revenue$, JSON.stringify);\nexport const A_revenue = (a) => {\n  return A_revenue$m(a);\n  // eslint-disable-next-line no-undef\n  A_revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_revenue memo-loader code //////////\n\n\n\n////////// start B_revenue memo-loader code //////////\n//const B_revenue$m = memoize(999999, isEqual)(B_revenue$);\nexport const B_revenue$m = memoize(B_revenue$, JSON.stringify);\nexport const B_revenue = (a) => {\n  return B_revenue$m(a);\n  // eslint-disable-next-line no-undef\n  B_revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B_revenue memo-loader code //////////\n\n\n\n////////// start revenue_impact memo-loader code //////////\n//const revenue_impact$m = memoize(999999, isEqual)(revenue_impact$);\nexport const revenue_impact$m = memoize(revenue_impact$, JSON.stringify);\nexport const revenue_impact = (a) => {\n  return revenue_impact$m(a);\n  // eslint-disable-next-line no-undef\n  revenue_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end revenue_impact memo-loader code //////////\n\n\n    "],"mappings":";AACI,SAASA,OAAO,QAAQ,YAAY;AACpC;AACA;;AAEA;;AAEA,SAASC,UAAU,IAAIC,UAAU,EAAEC,UAAU,IAAIC,UAAU,EAAEC,eAAe,IAAIC,eAAe,QAAQ,iEAA4B,CAAC,CAAC;;;;;;AAMzI;AACA;AACA,OAAO,MAAMC,WAAW,GAAGP,OAAO,CAACE,UAAU,EAAEM,IAAI,CAACC,SAAS,CAAC;AAC9D,OAAO,MAAMC,SAAS,GAAGA,CAACC,CAAC,KAAK;EAC9B,OAAOJ,WAAW,CAACI,CAAC,CAAC;EACrB;EACAT,UAAU,IAAE,CAAC,CAAC;AAChB,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMU,WAAW,GAAGZ,OAAO,CAACI,UAAU,EAAEI,IAAI,CAACC,SAAS,CAAC;AAC9D,OAAO,MAAMI,SAAS,GAAGA,CAACF,CAAC,KAAK;EAC9B,OAAOC,WAAW,CAACD,CAAC,CAAC;EACrB;EACAP,UAAU,GAAAU,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,mBAAA,GAAE,CAAC,CAAC;AAChB,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGlB,OAAO,CAACM,eAAe,EAAEE,IAAI,CAACC,SAAS,CAAC;AACxE,OAAO,MAAMU,cAAc,GAAGA,CAACR,CAAC,KAAK;EACnC,OAAOO,gBAAgB,CAACP,CAAC,CAAC;EAC1B;EACAL,eAAe,GAAAQ,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,mBAAA,GAAE,CAAC,CAAC;AACrB,CAAC;AACD"}