{"version":3,"sources":["webpack:///../../calculang-testcase-models/manufacturing/webpack/universalModuleDefinition","webpack:///../../calculang-testcase-models/manufacturing/webpack/bootstrap","webpack:///../../calculang-testcase-models/manufacturing/impactsAB.cul.js","webpack:///../../calculang-testcase-models/manufacturing/revenue-fixed-inputs.cul.js","webpack:///../../calculang-testcase-models/manufacturing/price-change-reconciliation.cul.js","webpack:///../../calculang-testcase-models/manufacturing/base.cul.js"],"names":["revenue_impact","step_in","units_in","price_in","price_multiplier_in","A_revenue","B_revenue","units","price","step","units_1","price_1","price_multiplier","revenue","costs","profit"],"mappings":"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","file":"impactsAB.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { revenue as A_revenue } from './revenue-fixed-inputs.cul.js'; // model A\nimport { revenue as B_revenue } from './price-change-reconciliation.cul.js'; // model B // sometimes B goes through cul loader before A!\n\nexport { A_revenue, B_revenue }; // should fail without this, but doesn't? : => internally everything effectively exported by webpack (maybe just b/c module concatenation plugin)\n\nexport const revenue_impact = () => A_revenue() - B_revenue(); // todo units, price, or maybe generate via impacts loader\n\n// because concatenation module doesn't use the 'as' part, it does some of its own renaming instead\n","import { revenue } from './base.cul';\nexport { revenue };\n\nexport const units = () => 100;\nexport const price = () => 500;\n\n// this fixes (or constrains) the 2 inputs in base, so that this model is independent of inputs\n// e.g. revenue() and profit() can be called without inputs and the values specified above are used\n","// this model takes inputs base price and units, and a price_multiplier.\n// it derives a proposed price by applying the multiplier and derives consequent units, constrained to the demand curve below.\n\n// via an additional input step_in it provides a mini reconciliation (if you can call it that) feature, moving units from the amount reflecting the update to the demand curve (when step_in is 0)\n// back to the base unit value (when step_in is 1) i.e. giving the results without the demand curve impact.\n\n// both revenue and units are impacted by the step input (and profit, and any other units-dependent functions throughout the complete model: this works no matter how complicated the base model)\n\n// 'mini' is because price is already updated throughout the steps - step is really just acting like a switch here.\n// A real reconciliation should move through all the inputs, and should be structured more logically (as in a model-of- a more general model, separated), but this is just for testing\n\n// this tests some key language features of calculang and demos their technical motivations\n\nimport { revenue, units_ as units_1, price_ as price_1 } from './base.cul'; // don't pollute the _ modifier\nexport { revenue, units_1, price_1 };\n//export { revenue, units_, price_ };\n\n// import { all } from './base.cul.js'; TODO use this in place of above when I fix issue #13\n// export { all };\n\nexport const units = () =>\n  step() >= 1 ? units_1() + (price() - price_1()) * -0.005 : units_1();\nexport const price = () => price_1() * price_multiplier();\n\n// new inputs\nexport const price_multiplier = () => price_multiplier_in;\nexport const step = () => step_in;\n","export const revenue = () => {\n  return units() * price();\n};\n\n// variable costs only, OK for testing\nexport const costs = () => 100 * units();\n\nexport const profit = () => revenue() - costs();\n\n// inputs\nexport const units = () => units_in;\nexport const price = () => price_in;\n\n// ?? what if an explicit import in base referred back to A or B?\n"],"sourceRoot":""}