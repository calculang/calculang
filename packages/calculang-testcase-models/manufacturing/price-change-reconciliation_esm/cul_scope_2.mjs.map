{"version":3,"names":["memoize","units_","units$","price_","price$","price_multiplier_","price_multiplier$","step_","step$","revenue_","revenue$","costs_","costs$","profit_","profit$","units$m","JSON","stringify","units","a","units_in","price$m","price","price_in","price_multiplier$m","price_multiplier","step$m","step","revenue$m","revenue","step_in","price_multiplier_in","costs$m","costs","profit$m","profit"],"sources":["base.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    import { units_ as units$, price_ as price$, price_multiplier_ as price_multiplier$, step_ as step$, revenue_ as revenue$, costs_ as costs$, profit_ as profit$ } from './base.cul.js?&+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n    \n    \n\n////////// start units memo-loader code //////////\n//const units$m = memoize(999999, isEqual)(units$);\nexport const units$m = memoize(units$, JSON.stringify);\nexport const units = (a) => {\n  return units$m(a);\n  // eslint-disable-next-line no-undef\n  units$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end units memo-loader code //////////\n\n\n\n////////// start price memo-loader code //////////\n//const price$m = memoize(999999, isEqual)(price$);\nexport const price$m = memoize(price$, JSON.stringify);\nexport const price = (a) => {\n  return price$m(a);\n  // eslint-disable-next-line no-undef\n  price$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end price memo-loader code //////////\n\n\n\n////////// start price_multiplier memo-loader code //////////\n//const price_multiplier$m = memoize(999999, isEqual)(price_multiplier$);\nexport const price_multiplier$m = memoize(price_multiplier$, JSON.stringify);\nexport const price_multiplier = (a) => {\n  return price_multiplier$m(a);\n  // eslint-disable-next-line no-undef\n  price_multiplier$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end price_multiplier memo-loader code //////////\n\n\n\n////////// start step memo-loader code //////////\n//const step$m = memoize(999999, isEqual)(step$);\nexport const step$m = memoize(step$, JSON.stringify);\nexport const step = (a) => {\n  return step$m(a);\n  // eslint-disable-next-line no-undef\n  step$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end step memo-loader code //////////\n\n\n\n////////// start revenue memo-loader code //////////\n//const revenue$m = memoize(999999, isEqual)(revenue$);\nexport const revenue$m = memoize(revenue$, JSON.stringify);\nexport const revenue = (a) => {\n  return revenue$m(a);\n  // eslint-disable-next-line no-undef\n  revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end revenue memo-loader code //////////\n\n\n\n////////// start costs memo-loader code //////////\n//const costs$m = memoize(999999, isEqual)(costs$);\nexport const costs$m = memoize(costs$, JSON.stringify);\nexport const costs = (a) => {\n  return costs$m(a);\n  // eslint-disable-next-line no-undef\n  costs$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end costs memo-loader code //////////\n\n\n\n////////// start profit memo-loader code //////////\n//const profit$m = memoize(999999, isEqual)(profit$);\nexport const profit$m = memoize(profit$, JSON.stringify);\nexport const profit = (a) => {\n  return profit$m(a);\n  // eslint-disable-next-line no-undef\n  profit$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end profit memo-loader code //////////\n\n\n    "],"mappings":";AACI,SAASA,OAAO,QAAQ,YAAY;AACpC;AACA;;AAEA,SAASC,MAAM,IAAIC,MAAM,EAAEC,MAAM,IAAIC,MAAM,EAAEC,iBAAiB,IAAIC,iBAAiB,EAAEC,KAAK,IAAIC,KAAK,EAAEC,QAAQ,IAAIC,QAAQ,EAAEC,MAAM,IAAIC,MAAM,EAAEC,OAAO,IAAIC,OAAO,QAAQ,6DAAwB,CAAC,CAAC;;;;AAIrM;AACA;AACA,OAAO,MAAMC,OAAO,GAAGf,OAAO,CAACE,MAAM,EAAEc,IAAI,CAACC,SAAS,CAAC;AACtD,OAAO,MAAMC,MAAK,GAAGA,CAACC,CAAC,KAAK;EAC1B,OAAOJ,OAAO,CAACI,CAAC,CAAC;EACjB;EACAjB,MAAM,GAAAkB,QAAA,GAAE,CAAC,CAAC;AACZ,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGrB,OAAO,CAACI,MAAM,EAAEY,IAAI,CAACC,SAAS,CAAC;AACtD,OAAO,MAAMK,MAAK,GAAGA,CAACH,CAAC,KAAK;EAC1B,OAAOE,OAAO,CAACF,CAAC,CAAC;EACjB;EACAf,MAAM,GAAAmB,QAAA,GAAE,CAAC,CAAC;AACZ,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAGxB,OAAO,CAACM,iBAAiB,EAAEU,IAAI,CAACC,SAAS,CAAC;AAC5E,OAAO,MAAMQ,iBAAgB,GAAGA,CAACN,CAAC,KAAK;EACrC,OAAOK,kBAAkB,CAACL,CAAC,CAAC;EAC5B;EACAb,iBAAiB,IAAE,CAAC,CAAC;AACvB,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMoB,MAAM,GAAG1B,OAAO,CAACQ,KAAK,EAAEQ,IAAI,CAACC,SAAS,CAAC;AACpD,OAAO,MAAMU,KAAI,GAAGA,CAACR,CAAC,KAAK;EACzB,OAAOO,MAAM,CAACP,CAAC,CAAC;EAChB;EACAX,KAAK,IAAE,CAAC,CAAC;AACX,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMoB,SAAS,GAAG5B,OAAO,CAACU,QAAQ,EAAEM,IAAI,CAACC,SAAS,CAAC;AAC1D,OAAO,MAAMY,QAAO,GAAGA,CAACV,CAAC,KAAK;EAC5B,OAAOS,SAAS,CAACT,CAAC,CAAC;EACnB;EACAT,QAAQ,GAAAoB,OAAA,EAAAV,QAAA,EAAAG,QAAA,EAAAQ,mBAAA,GAAE,CAAC,CAAC;AACd,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGhC,OAAO,CAACY,MAAM,EAAEI,IAAI,CAACC,SAAS,CAAC;AACtD,OAAO,MAAMgB,KAAK,GAAGA,CAACd,CAAC,KAAK;EAC1B,OAAOa,OAAO,CAACb,CAAC,CAAC;EACjB;EACAP,MAAM,GAAAkB,OAAA,EAAAV,QAAA,EAAAG,QAAA,EAAAQ,mBAAA,GAAE,CAAC,CAAC;AACZ,CAAC;AACD;;;;AAIA;AACA;AACA,OAAO,MAAMG,QAAQ,GAAGlC,OAAO,CAACc,OAAO,EAAEE,IAAI,CAACC,SAAS,CAAC;AACxD,OAAO,MAAMkB,MAAM,GAAGA,CAAChB,CAAC,KAAK;EAC3B,OAAOe,QAAQ,CAACf,CAAC,CAAC;EAClB;EACAL,OAAO,GAAAgB,OAAA,EAAAV,QAAA,EAAAG,QAAA,EAAAQ,mBAAA,GAAE,CAAC,CAAC;AACb,CAAC;AACD"}