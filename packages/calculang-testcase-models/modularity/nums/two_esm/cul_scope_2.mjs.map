{"version":3,"names":["memoize","num_","num$","num$m","JSON","stringify","num","a"],"sources":["one.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    // import/export non-to memo?\n\n    import { num_ as num$ } from './one.cul.js?&+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n    \n    \n    \n\n////////// start num memo-loader code //////////\n//const num$m = memoize(999999, isEqual)(num$);\nexport const num$m = memoize(num$, JSON.stringify);\nexport const num = (a) => {\n  return num$m(a);\n  // eslint-disable-next-line no-undef\n  num$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end num memo-loader code //////////\n\n\n    "],"mappings":";AACI,SAASA,OAAO,QAAQ,YAAY;AACpC;AACA;;AAEA;;AAEA,SAASC,IAAI,IAAIC,IAAI,QAAQ,4DAAuB,CAAC,CAAC;;;;;;AAM1D;AACA;AACA,OAAO,MAAMC,KAAK,GAAGH,OAAO,CAACE,IAAI,EAAEE,IAAI,CAACC,SAAS,CAAC;AAClD,OAAO,MAAMC,IAAG,GAAGA,CAACC,CAAC,KAAK;EACxB,OAAOJ,KAAK,CAACI,CAAC,CAAC;EACf;EACAL,IAAI,IAAE,CAAC,CAAC;AACV,CAAC;AACD"}