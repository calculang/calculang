{"version":3,"names":["memoize","A_revenue_","A_revenue$","revenue_impact_","revenue_impact$","units_","units$","price_","price$","price_multiplier_","price_multiplier$","step_","step$","revenue_","revenue$","costs_","costs$","profit_","profit$","A_revenue$m","JSON","stringify","A_revenue","a","revenue_impact$m","revenue_impact","units$m","units","units_in","price$m","price","price_in","price_multiplier$m","price_multiplier","step$m","step","revenue$m","revenue","costs$m","costs","profit$m","profit"],"sources":["base.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    import { A_revenue_ as A_revenue$, revenue_impact_ as revenue_impact$, units_ as units$, price_ as price$, price_multiplier_ as price_multiplier$, step_ as step$, revenue_ as revenue$, costs_ as costs$, profit_ as profit$ } from './base.cul.js?&+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n    \n    \n\n////////// start A_revenue memo-loader code //////////\n//const A_revenue$m = memoize(999999, isEqual)(A_revenue$);\nexport const A_revenue$m = memoize(A_revenue$, JSON.stringify);\nexport const A_revenue = (a) => {\n  return A_revenue$m(a);\n  // eslint-disable-next-line no-undef\n  A_revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_revenue memo-loader code //////////\n\n\n\n////////// start revenue_impact memo-loader code //////////\n//const revenue_impact$m = memoize(999999, isEqual)(revenue_impact$);\nexport const revenue_impact$m = memoize(revenue_impact$, JSON.stringify);\nexport const revenue_impact = (a) => {\n  return revenue_impact$m(a);\n  // eslint-disable-next-line no-undef\n  revenue_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end revenue_impact memo-loader code //////////\n\n\n\n////////// start units memo-loader code //////////\n//const units$m = memoize(999999, isEqual)(units$);\nexport const units$m = memoize(units$, JSON.stringify);\nexport const units = (a) => {\n  return units$m(a);\n  // eslint-disable-next-line no-undef\n  units$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end units memo-loader code //////////\n\n\n\n////////// start price memo-loader code //////////\n//const price$m = memoize(999999, isEqual)(price$);\nexport const price$m = memoize(price$, JSON.stringify);\nexport const price = (a) => {\n  return price$m(a);\n  // eslint-disable-next-line no-undef\n  price$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end price memo-loader code //////////\n\n\n\n////////// start price_multiplier memo-loader code //////////\n//const price_multiplier$m = memoize(999999, isEqual)(price_multiplier$);\nexport const price_multiplier$m = memoize(price_multiplier$, JSON.stringify);\nexport const price_multiplier = (a) => {\n  return price_multiplier$m(a);\n  // eslint-disable-next-line no-undef\n  price_multiplier$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end price_multiplier memo-loader code //////////\n\n\n\n////////// start step memo-loader code //////////\n//const step$m = memoize(999999, isEqual)(step$);\nexport const step$m = memoize(step$, JSON.stringify);\nexport const step = (a) => {\n  return step$m(a);\n  // eslint-disable-next-line no-undef\n  step$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end step memo-loader code //////////\n\n\n\n////////// start revenue memo-loader code //////////\n//const revenue$m = memoize(999999, isEqual)(revenue$);\nexport const revenue$m = memoize(revenue$, JSON.stringify);\nexport const revenue = (a) => {\n  return revenue$m(a);\n  // eslint-disable-next-line no-undef\n  revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end revenue memo-loader code //////////\n\n\n\n////////// start costs memo-loader code //////////\n//const costs$m = memoize(999999, isEqual)(costs$);\nexport const costs$m = memoize(costs$, JSON.stringify);\nexport const costs = (a) => {\n  return costs$m(a);\n  // eslint-disable-next-line no-undef\n  costs$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end costs memo-loader code //////////\n\n\n\n////////// start profit memo-loader code //////////\n//const profit$m = memoize(999999, isEqual)(profit$);\nexport const profit$m = memoize(profit$, JSON.stringify);\nexport const profit = (a) => {\n  return profit$m(a);\n  // eslint-disable-next-line no-undef\n  profit$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end profit memo-loader code //////////\n\n\n    "],"mappings":"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"}