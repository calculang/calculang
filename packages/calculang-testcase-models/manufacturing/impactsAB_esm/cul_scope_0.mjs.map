{"version":3,"names":["memoize","A_revenue_","A_revenue$","A_profit_","A_profit$","A_costs_","A_costs$","A_units_","A_units$","A_price_","A_price$","B_revenue_","B_revenue$","B_profit_","B_profit$","B_costs_","B_costs$","B_units_","B_units$","B_price_","B_price$","revenue_impact_","revenue_impact$","profit_impact_","profit_impact$","costs_impact_","costs_impact$","units_impact_","units_impact$","price_impact_","price_impact$","A_revenue$m","JSON","stringify","A_revenue","a","A_profit$m","A_profit","A_costs$m","A_costs","A_units$m","A_units","A_price$m","A_price","B_revenue$m","B_revenue","step_in","units_in","price_in","price_multiplier_in","B_profit$m","B_profit","B_costs$m","B_costs","B_units$m","B_units","B_price$m","B_price","revenue_impact$m","revenue_impact","profit_impact$m","profit_impact","costs_impact$m","costs_impact","units_impact$m","units_impact","price_impact$m","price_impact"],"sources":["impactsAB.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    // import/export non-to memo?\n\n    import { A_revenue_ as A_revenue$, A_profit_ as A_profit$, A_costs_ as A_costs$, A_units_ as A_units$, A_price_ as A_price$, B_revenue_ as B_revenue$, B_profit_ as B_profit$, B_costs_ as B_costs$, B_units_ as B_units$, B_price_ as B_price$, revenue_impact_ as revenue_impact$, profit_impact_ as profit_impact$, costs_impact_ as costs_impact$, units_impact_ as units_impact$, price_impact_ as price_impact$ } from './impactsAB.cul.js?+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n    \n    \n    \n\n////////// start A_revenue memo-loader code //////////\n//const A_revenue$m = memoize(999999, isEqual)(A_revenue$);\nexport const A_revenue$m = memoize(A_revenue$, JSON.stringify);\nexport const A_revenue = (a) => {\n  return A_revenue$m(a);\n  // eslint-disable-next-line no-undef\n  A_revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_revenue memo-loader code //////////\n\n\n\n////////// start A_profit memo-loader code //////////\n//const A_profit$m = memoize(999999, isEqual)(A_profit$);\nexport const A_profit$m = memoize(A_profit$, JSON.stringify);\nexport const A_profit = (a) => {\n  return A_profit$m(a);\n  // eslint-disable-next-line no-undef\n  A_profit$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_profit memo-loader code //////////\n\n\n\n////////// start A_costs memo-loader code //////////\n//const A_costs$m = memoize(999999, isEqual)(A_costs$);\nexport const A_costs$m = memoize(A_costs$, JSON.stringify);\nexport const A_costs = (a) => {\n  return A_costs$m(a);\n  // eslint-disable-next-line no-undef\n  A_costs$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_costs memo-loader code //////////\n\n\n\n////////// start A_units memo-loader code //////////\n//const A_units$m = memoize(999999, isEqual)(A_units$);\nexport const A_units$m = memoize(A_units$, JSON.stringify);\nexport const A_units = (a) => {\n  return A_units$m(a);\n  // eslint-disable-next-line no-undef\n  A_units$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_units memo-loader code //////////\n\n\n\n////////// start A_price memo-loader code //////////\n//const A_price$m = memoize(999999, isEqual)(A_price$);\nexport const A_price$m = memoize(A_price$, JSON.stringify);\nexport const A_price = (a) => {\n  return A_price$m(a);\n  // eslint-disable-next-line no-undef\n  A_price$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end A_price memo-loader code //////////\n\n\n\n////////// start B_revenue memo-loader code //////////\n//const B_revenue$m = memoize(999999, isEqual)(B_revenue$);\nexport const B_revenue$m = memoize(B_revenue$, JSON.stringify);\nexport const B_revenue = (a) => {\n  return B_revenue$m(a);\n  // eslint-disable-next-line no-undef\n  B_revenue$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B_revenue memo-loader code //////////\n\n\n\n////////// start B_profit memo-loader code //////////\n//const B_profit$m = memoize(999999, isEqual)(B_profit$);\nexport const B_profit$m = memoize(B_profit$, JSON.stringify);\nexport const B_profit = (a) => {\n  return B_profit$m(a);\n  // eslint-disable-next-line no-undef\n  B_profit$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B_profit memo-loader code //////////\n\n\n\n////////// start B_costs memo-loader code //////////\n//const B_costs$m = memoize(999999, isEqual)(B_costs$);\nexport const B_costs$m = memoize(B_costs$, JSON.stringify);\nexport const B_costs = (a) => {\n  return B_costs$m(a);\n  // eslint-disable-next-line no-undef\n  B_costs$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B_costs memo-loader code //////////\n\n\n\n////////// start B_units memo-loader code //////////\n//const B_units$m = memoize(999999, isEqual)(B_units$);\nexport const B_units$m = memoize(B_units$, JSON.stringify);\nexport const B_units = (a) => {\n  return B_units$m(a);\n  // eslint-disable-next-line no-undef\n  B_units$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B_units memo-loader code //////////\n\n\n\n////////// start B_price memo-loader code //////////\n//const B_price$m = memoize(999999, isEqual)(B_price$);\nexport const B_price$m = memoize(B_price$, JSON.stringify);\nexport const B_price = (a) => {\n  return B_price$m(a);\n  // eslint-disable-next-line no-undef\n  B_price$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end B_price memo-loader code //////////\n\n\n\n////////// start revenue_impact memo-loader code //////////\n//const revenue_impact$m = memoize(999999, isEqual)(revenue_impact$);\nexport const revenue_impact$m = memoize(revenue_impact$, JSON.stringify);\nexport const revenue_impact = (a) => {\n  return revenue_impact$m(a);\n  // eslint-disable-next-line no-undef\n  revenue_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end revenue_impact memo-loader code //////////\n\n\n\n////////// start profit_impact memo-loader code //////////\n//const profit_impact$m = memoize(999999, isEqual)(profit_impact$);\nexport const profit_impact$m = memoize(profit_impact$, JSON.stringify);\nexport const profit_impact = (a) => {\n  return profit_impact$m(a);\n  // eslint-disable-next-line no-undef\n  profit_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end profit_impact memo-loader code //////////\n\n\n\n////////// start costs_impact memo-loader code //////////\n//const costs_impact$m = memoize(999999, isEqual)(costs_impact$);\nexport const costs_impact$m = memoize(costs_impact$, JSON.stringify);\nexport const costs_impact = (a) => {\n  return costs_impact$m(a);\n  // eslint-disable-next-line no-undef\n  costs_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end costs_impact memo-loader code //////////\n\n\n\n////////// start units_impact memo-loader code //////////\n//const units_impact$m = memoize(999999, isEqual)(units_impact$);\nexport const units_impact$m = memoize(units_impact$, JSON.stringify);\nexport const units_impact = (a) => {\n  return units_impact$m(a);\n  // eslint-disable-next-line no-undef\n  units_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end units_impact memo-loader code //////////\n\n\n\n////////// start price_impact memo-loader code //////////\n//const price_impact$m = memoize(999999, isEqual)(price_impact$);\nexport const price_impact$m = memoize(price_impact$, JSON.stringify);\nexport const price_impact = (a) => {\n  return price_impact$m(a);\n  // eslint-disable-next-line no-undef\n  price_impact$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end price_impact memo-loader code //////////\n\n\n    "],"mappings":"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"}