{"version":3,"names":["memoize","num__","num_$","num_$m","JSON","stringify","num_","a"],"sources":["twoAgain.cul.js"],"sourcesContent":["\n    import { memoize } from 'underscore';\n    //import memoize from 'lru-memoize';\n    //import { isEqual } from 'underscore'; // TODO poor tree shaking support, or why is this impact so massive? Move to lodash/lodash-es?\n    \n    // import/export non-to memo?\n\n    import { num__ as num_$ } from './twoAgain.cul.js?&+memoed'; // there is already-culed stuff in here, why? imports to memo loader include cul_scope_id, what logic should it apply RE passing forward? eliminate? Probably!\n\n    \n    \n    \n\n////////// start num_ memo-loader code //////////\n//const num_$m = memoize(999999, isEqual)(num_$);\nexport const num_$m = memoize(num_$, JSON.stringify);\nexport const num_ = (a) => {\n  return num_$m(a);\n  // eslint-disable-next-line no-undef\n  num_$(); // never run, but here to \"trick\" calculang graph logic\n};\n////////// end num_ memo-loader code //////////\n\n\n    "],"mappings":";AACI,SAASA,OAAO,QAAQ,YAAY;AACpC;AACA;;AAEA;;AAEA,SAASC,KAAK,IAAIC,KAAK,QAAQ,iEAA4B,CAAC,CAAC;;;;;;AAMjE;AACA;AACA,OAAO,MAAMC,MAAM,GAAGH,OAAO,CAACE,KAAK,EAAEE,IAAI,CAACC,SAAS,CAAC;AACpD,OAAO,MAAMC,IAAI,GAAGA,CAACC,CAAC,KAAK;EACzB,OAAOJ,MAAM,CAACI,CAAC,CAAC;EAChB;EACAL,KAAK,IAAE,CAAC,CAAC;AACX,CAAC;AACD"}