/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/@dagrejs/graphlib@2.2.4/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var e="\0",t="\0",r="";function s(e,t){e[t]?e[t]++:e[t]=1}function i(e,t){--e[t]||delete e[t]}function n(t,s,i,n){var o=""+s,a=""+i;if(!t&&o>a){var h=o;o=a,a=h}return o+r+a+r+(void 0===n?e:n)}function o(e,t){return n(e,t.v,t.w,t.name)}var a=class{_isDirected=!0;_isMultigraph=!1;_isCompound=!1;_label;_defaultNodeLabelFn=()=>{};_defaultEdgeLabelFn=()=>{};_nodes={};_in={};_preds={};_out={};_sucs={};_edgeObjs={};_edgeLabels={};_nodeCount=0;_edgeCount=0;_parent;_children;constructor(e){e&&(this._isDirected=!Object.hasOwn(e,"directed")||e.directed,this._isMultigraph=!!Object.hasOwn(e,"multigraph")&&e.multigraph,this._isCompound=!!Object.hasOwn(e,"compound")&&e.compound),this._isCompound&&(this._parent={},this._children={},this._children[t]={})}isDirected(){return this._isDirected}isMultigraph(){return this._isMultigraph}isCompound(){return this._isCompound}setGraph(e){return this._label=e,this}graph(){return this._label}setDefaultNodeLabel(e){return this._defaultNodeLabelFn=e,"function"!=typeof e&&(this._defaultNodeLabelFn=()=>e),this}nodeCount(){return this._nodeCount}nodes(){return Object.keys(this._nodes)}sources(){var e=this;return this.nodes().filter((t=>0===Object.keys(e._in[t]).length))}sinks(){var e=this;return this.nodes().filter((t=>0===Object.keys(e._out[t]).length))}setNodes(e,t){var r=arguments,s=this;return e.forEach((function(e){r.length>1?s.setNode(e,t):s.setNode(e)})),this}setNode(e,r){return Object.hasOwn(this._nodes,e)?(arguments.length>1&&(this._nodes[e]=r),this):(this._nodes[e]=arguments.length>1?r:this._defaultNodeLabelFn(e),this._isCompound&&(this._parent[e]=t,this._children[e]={},this._children[t][e]=!0),this._in[e]={},this._preds[e]={},this._out[e]={},this._sucs[e]={},++this._nodeCount,this)}node(e){return this._nodes[e]}hasNode(e){return Object.hasOwn(this._nodes,e)}removeNode(e){var t=this;if(Object.hasOwn(this._nodes,e)){var r=e=>t.removeEdge(t._edgeObjs[e]);delete this._nodes[e],this._isCompound&&(this._removeFromParentsChildList(e),delete this._parent[e],this.children(e).forEach((function(e){t.setParent(e)})),delete this._children[e]),Object.keys(this._in[e]).forEach(r),delete this._in[e],delete this._preds[e],Object.keys(this._out[e]).forEach(r),delete this._out[e],delete this._sucs[e],--this._nodeCount}return this}setParent(e,r){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(void 0===r)r=t;else{for(var s=r+="";void 0!==s;s=this.parent(s))if(s===e)throw new Error("Setting "+r+" as parent of "+e+" would create a cycle");this.setNode(r)}return this.setNode(e),this._removeFromParentsChildList(e),this._parent[e]=r,this._children[r][e]=!0,this}_removeFromParentsChildList(e){delete this._children[this._parent[e]][e]}parent(e){if(this._isCompound){var r=this._parent[e];if(r!==t)return r}}children(e=t){if(this._isCompound){var r=this._children[e];if(r)return Object.keys(r)}else{if(e===t)return this.nodes();if(this.hasNode(e))return[]}}predecessors(e){var t=this._preds[e];if(t)return Object.keys(t)}successors(e){var t=this._sucs[e];if(t)return Object.keys(t)}neighbors(e){var t=this.predecessors(e);if(t){const s=new Set(t);for(var r of this.successors(e))s.add(r);return Array.from(s.values())}}isLeaf(e){return 0===(this.isDirected()?this.successors(e):this.neighbors(e)).length}filterNodes(e){var t=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});t.setGraph(this.graph());var r=this;Object.entries(this._nodes).forEach((function([r,s]){e(r)&&t.setNode(r,s)})),Object.values(this._edgeObjs).forEach((function(e){t.hasNode(e.v)&&t.hasNode(e.w)&&t.setEdge(e,r.edge(e))}));var s={};function i(e){var n=r.parent(e);return void 0===n||t.hasNode(n)?(s[e]=n,n):n in s?s[n]:i(n)}return this._isCompound&&t.nodes().forEach((e=>t.setParent(e,i(e)))),t}setDefaultEdgeLabel(e){return this._defaultEdgeLabelFn=e,"function"!=typeof e&&(this._defaultEdgeLabelFn=()=>e),this}edgeCount(){return this._edgeCount}edges(){return Object.values(this._edgeObjs)}setPath(e,t){var r=this,s=arguments;return e.reduce((function(e,i){return s.length>1?r.setEdge(e,i,t):r.setEdge(e,i),i})),this}setEdge(){var e,t,r,i,o=!1,a=arguments[0];"object"==typeof a&&null!==a&&"v"in a?(e=a.v,t=a.w,r=a.name,2===arguments.length&&(i=arguments[1],o=!0)):(e=a,t=arguments[1],r=arguments[3],arguments.length>2&&(i=arguments[2],o=!0)),e=""+e,t=""+t,void 0!==r&&(r=""+r);var h=n(this._isDirected,e,t,r);if(Object.hasOwn(this._edgeLabels,h))return o&&(this._edgeLabels[h]=i),this;if(void 0!==r&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(e),this.setNode(t),this._edgeLabels[h]=o?i:this._defaultEdgeLabelFn(e,t,r);var d=function(e,t,r,s){var i=""+t,n=""+r;if(!e&&i>n){var o=i;i=n,n=o}var a={v:i,w:n};s&&(a.name=s);return a}(this._isDirected,e,t,r);return e=d.v,t=d.w,Object.freeze(d),this._edgeObjs[h]=d,s(this._preds[t],e),s(this._sucs[e],t),this._in[t][h]=d,this._out[e][h]=d,this._edgeCount++,this}edge(e,t,r){var s=1===arguments.length?o(this._isDirected,arguments[0]):n(this._isDirected,e,t,r);return this._edgeLabels[s]}edgeAsObj(){const e=this.edge(...arguments);return"object"!=typeof e?{label:e}:e}hasEdge(e,t,r){var s=1===arguments.length?o(this._isDirected,arguments[0]):n(this._isDirected,e,t,r);return Object.hasOwn(this._edgeLabels,s)}removeEdge(e,t,r){var s=1===arguments.length?o(this._isDirected,arguments[0]):n(this._isDirected,e,t,r),a=this._edgeObjs[s];return a&&(e=a.v,t=a.w,delete this._edgeLabels[s],delete this._edgeObjs[s],i(this._preds[t],e),i(this._sucs[e],t),delete this._in[t][s],delete this._out[e][s],this._edgeCount--),this}inEdges(e,t){var r=this._in[e];if(r){var s=Object.values(r);return t?s.filter((e=>e.v===t)):s}}outEdges(e,t){var r=this._out[e];if(r){var s=Object.values(r);return t?s.filter((e=>e.w===t)):s}}nodeEdges(e,t){var r=this.inEdges(e,t);if(r)return r.concat(this.outEdges(e,t))}},h={Graph:a,version:"2.2.4"},d=a,u={write:function(e){var t={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:c(e),edges:f(e)};void 0!==e.graph()&&(t.value=structuredClone(e.graph()));return t},read:function(e){var t=new d(e.options).setGraph(e.value);return e.nodes.forEach((function(e){t.setNode(e.v,e.value),e.parent&&t.setParent(e.v,e.parent)})),e.edges.forEach((function(e){t.setEdge({v:e.v,w:e.w,name:e.name},e.value)})),t}};function c(e){return e.nodes().map((function(t){var r=e.node(t),s=e.parent(t),i={v:t};return void 0!==r&&(i.value=r),void 0!==s&&(i.parent=s),i}))}function f(e){return e.edges().map((function(t){var r=e.edge(t),s={v:t.v,w:t.w};return void 0!==t.name&&(s.name=t.name),void 0!==r&&(s.value=r),s}))}var l=function(e){var t,r={},s=[];function i(s){Object.hasOwn(r,s)||(r[s]=!0,t.push(s),e.successors(s).forEach(i),e.predecessors(s).forEach(i))}return e.nodes().forEach((function(e){t=[],i(e),t.length&&s.push(t)})),s};var _=class{_arr=[];_keyIndices={};size(){return this._arr.length}keys(){return this._arr.map((function(e){return e.key}))}has(e){return Object.hasOwn(this._keyIndices,e)}priority(e){var t=this._keyIndices[e];if(void 0!==t)return this._arr[t].priority}min(){if(0===this.size())throw new Error("Queue underflow");return this._arr[0].key}add(e,t){var r=this._keyIndices;if(e=String(e),!Object.hasOwn(r,e)){var s=this._arr,i=s.length;return r[e]=i,s.push({key:e,priority:t}),this._decrease(i),!0}return!1}removeMin(){this._swap(0,this._arr.length-1);var e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key}decrease(e,t){var r=this._keyIndices[e];if(t>this._arr[r].priority)throw new Error("New priority is greater than current priority. Key: "+e+" Old: "+this._arr[r].priority+" New: "+t);this._arr[r].priority=t,this._decrease(r)}_heapify(e){var t=this._arr,r=2*e,s=r+1,i=e;r<t.length&&(i=t[r].priority<t[i].priority?r:i,s<t.length&&(i=t[s].priority<t[i].priority?s:i),i!==e&&(this._swap(e,i),this._heapify(i)))}_decrease(e){for(var t,r=this._arr,s=r[e].priority;0!==e&&!(r[t=e>>1].priority<s);)this._swap(e,t),e=t}_swap(e,t){var r=this._arr,s=this._keyIndices,i=r[e],n=r[t];r[e]=n,r[t]=i,s[n.key]=e,s[i.key]=t}},v=_,p=function(e,t,r,s){return function(e,t,r,s){var i,n,o={},a=new v,h=function(e){var t=e.v!==i?e.v:e.w,s=o[t],h=r(e),d=n.distance+h;if(h<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+e+" Weight: "+h);d<s.distance&&(s.distance=d,s.predecessor=i,a.decrease(t,d))};e.nodes().forEach((function(e){var r=e===t?0:Number.POSITIVE_INFINITY;o[e]={distance:r},a.add(e,r)}));for(;a.size()>0&&(i=a.removeMin(),(n=o[i]).distance!==Number.POSITIVE_INFINITY);)s(i).forEach(h);return o}(e,String(t),r||g,s||function(t){return e.outEdges(t)})},g=()=>1;var w=p,b=function(e,t,r){return e.nodes().reduce((function(s,i){return s[i]=w(e,i,t,r),s}),{})};var E=function(e){var t=0,r=[],s={},i=[];function n(o){var a=s[o]={onStack:!0,lowlink:t,index:t++};if(r.push(o),e.successors(o).forEach((function(e){Object.hasOwn(s,e)?s[e].onStack&&(a.lowlink=Math.min(a.lowlink,s[e].index)):(n(e),a.lowlink=Math.min(a.lowlink,s[e].lowlink))})),a.lowlink===a.index){var h,d=[];do{h=r.pop(),s[h].onStack=!1,d.push(h)}while(o!==h);i.push(d)}}return e.nodes().forEach((function(e){Object.hasOwn(s,e)||n(e)})),i};var O=E,y=function(e){return O(e).filter((function(t){return t.length>1||1===t.length&&e.hasEdge(t[0],t[0])}))};var m=function(e,t,r){return function(e,t,r){var s={},i=e.nodes();return i.forEach((function(e){s[e]={},s[e][e]={distance:0},i.forEach((function(t){e!==t&&(s[e][t]={distance:Number.POSITIVE_INFINITY})})),r(e).forEach((function(r){var i=r.v===e?r.w:r.v,n=t(r);s[e][i]={distance:n,predecessor:e}}))})),i.forEach((function(e){var t=s[e];i.forEach((function(r){var n=s[r];i.forEach((function(r){var s=n[e],i=t[r],o=n[r],a=s.distance+i.distance;a<o.distance&&(o.distance=a,o.predecessor=i.predecessor)}))}))})),s}(e,t||j,r||function(t){return e.outEdges(t)})},j=()=>1;function k(e){var t={},r={},s=[];if(e.sinks().forEach((function i(n){if(Object.hasOwn(r,n))throw new N;Object.hasOwn(t,n)||(r[n]=!0,t[n]=!0,e.predecessors(n).forEach(i),delete r[n],s.push(n))})),Object.keys(t).length!==e.nodeCount())throw new N;return s}class N extends Error{constructor(){super(...arguments)}}var C=k;k.CycleException=N;var I=C;var L=function(e,t,r){Array.isArray(t)||(t=[t]);var s=e.isDirected()?t=>e.successors(t):t=>e.neighbors(t),i="post"===r?D:F,n=[],o={};return t.forEach((t=>{if(!e.hasNode(t))throw new Error("Graph does not have node: "+t);i(t,s,o,n)})),n};function D(e,t,r,s){for(var i=[[e,!1]];i.length>0;){var n=i.pop();n[1]?s.push(n[0]):Object.hasOwn(r,n[0])||(r[n[0]]=!0,i.push([n[0],!0]),M(t(n[0]),(e=>i.push([e,!1]))))}}function F(e,t,r,s){for(var i=[e];i.length>0;){var n=i.pop();Object.hasOwn(r,n)||(r[n]=!0,s.push(n),M(t(n),(e=>i.push(e))))}}function M(e,t){for(var r=e.length;r--;)t(e[r],r,e);return e}var P=L;var S=L;var G=a,T=_;var x={Graph:h.Graph,json:u,alg:{components:l,dijkstra:p,dijkstraAll:b,findCycles:y,floydWarshall:m,isAcyclic:function(e){try{I(e)}catch(e){if(e instanceof I.CycleException)return!1;throw e}return!0},postorder:function(e,t){return P(e,t,"post")},preorder:function(e,t){return S(e,t,"pre")},prim:function(e,t){var r,s=new G,i={},n=new T;function o(e){var s=e.v===r?e.w:e.v,o=n.priority(s);if(void 0!==o){var a=t(e);a<o&&(i[s]=r,n.decrease(s,a))}}if(0===e.nodeCount())return s;e.nodes().forEach((function(e){n.add(e,Number.POSITIVE_INFINITY),s.setNode(e)})),n.decrease(e.nodes()[0],0);var a=!1;for(;n.size()>0;){if(r=n.removeMin(),Object.hasOwn(i,r))s.setEdge(r,i[r]);else{if(a)throw new Error("Input graph is not connected: "+e);a=!0}e.nodeEdges(r).forEach(o)}return s},tarjan:E,topsort:C},version:h.version},A=x.Graph,z=x.alg,V=x.json,Y=x.version;export{A as Graph,z as alg,x as default,V as json,Y as version};
